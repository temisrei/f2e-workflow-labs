{"version":3,"sources":["app.module.js","admin/admin.module.js","core/core.module.js","dashboard/dashboard.module.js","layout/layout.module.js","widgets/widgets.module.js","blocks/exception/exception.module.js","blocks/logger/logger.module.js","blocks/router/router.module.js","admin/admin.controller.js","admin/admin.route.js","core/config.js","core/constants.js","core/core.route.js","core/dataservice.js","dashboard/dashboard.controller.js","dashboard/dashboard.route.js","layout/ht-sidebar.directive.js","layout/ht-top-nav.directive.js","layout/shell.controller.js","layout/sidebar.controller.js","widgets/ht-img-person.directive.js","widgets/ht-widget-header.directive.js","blocks/exception/exception-handler.provider.js","blocks/exception/exception.js","blocks/logger/logger.js","blocks/router/router-helper.provider.js"],"names":["angular","module","AdminController","logger","activate","info","vm","this","title","controller","$inject","appRun","routerHelper","configureStates","getStates","state","config","url","templateUrl","controllerAs","settings","nav","content","run","toastrConfig","toastr","options","timeOut","positionClass","configure","$logProvider","routerHelperProvider","exceptionHandlerProvider","debugEnabled","appErrorPrefix","docTitle","appTitle","core","value","constant","moment","otherwise","dataservice","$http","$q","exception","getMessageCount","when","getPeople","success","response","data","fail","e","catcher","get","then","service","factory","DashboardController","promises","all","messageCount","people","news","description","htSidebar","link","scope","element","attrs","dropdown","dropClass","preventDefault","$dropdownElement","hasClass","removeClass","$sidebarInner","slideUp","whenDoneAnimating","slideDown","addClass","find","click","directive","restrict","htTopNav","TopNavController","bindToController","navline","ShellController","$rootScope","$timeout","hideSplash","showSplash","busyMessage","isBusy","text","SidebarController","$state","getNavRoutes","navRoutes","states","filter","r","sort","r1","r2","isCurrent","route","current","menuName","substr","length","htImgPerson","$observe","basePath","unknownImage","$set","imageBasePath","unknownPersonImageSource","htWidgetHeader","subtitle","rightText","allowCollapse","undefined","$get","$provide","decorator","extendExceptionHandler","$delegate","exceptionHandler","cause","errorData","message","error","provider","thrownDescription","newMessage","reject","$log","warning","warn","showToasts","log","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$location","otherwisePath","forEach","resolve","extend","resolveAlways","hasOtherwise","handleRoutingErrors","$on","event","toState","toParams","fromState","fromParams","handlingStateChangeError","stateCounts","errors","destination","name","loadedTemplateUrl","msg","statusText","status","path","init","updateDocTitle","changes","html5Mode","cfg"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('app', [\n        'app.core',\n        'app.widgets',\n        'app.admin',\n        'app.dashboard',\n        'app.layout'\n    ]);\n\n})();\n","(function () {\n    'use strict';\n\n    angular.module('app.admin', [\n        'app.core',\n        'app.widgets'\n      ]);\n\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.core', [\n            'ngAnimate', 'ngSanitize',\n            'blocks.exception', 'blocks.logger', 'blocks.router',\n            'ui.router', 'ngplus'\n        ]);\n})();\n","(function() {\n    'use strict';\n\n    angular.module('app.dashboard', [\n        'app.core',\n        'app.widgets'\n      ]);\n})();\n","(function() {\n    'use strict';\n\n    angular.module('app.layout', ['app.core']);\n})();\n","(function() {\n    'use strict';\n\n    angular.module('app.widgets', []);\n})();\n","(function() {\n    'use strict';\n\n    angular.module('blocks.exception', ['blocks.logger']);\n})();\n","(function() {\n    'use strict';\n\n    angular.module('blocks.logger', []);\n})();\n","(function() {\n    'use strict';\n\n    angular.module('blocks.router', [\n        'ui.router',\n        'blocks.logger'\n    ]);\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.admin')\n        .controller('AdminController', AdminController);\n\n    AdminController.$inject = ['logger'];\n    /* @ngInject */\n    function AdminController(logger) {\n        var vm = this;\n        vm.title = 'Admin';\n\n        activate();\n\n        function activate() {\n            logger.info('Activated Admin View');\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.admin')\n        .run(appRun);\n\n    appRun.$inject = ['routerHelper'];\n    /* @ngInject */\n    function appRun(routerHelper) {\n        routerHelper.configureStates(getStates());\n    }\n\n    function getStates() {\n        return [\n            {\n                state: 'admin',\n                config: {\n                    url: '/admin',\n                    templateUrl: 'app/admin/admin.html',\n                    controller: 'AdminController',\n                    controllerAs: 'vm',\n                    title: 'Admin',\n                    settings: {\n                        nav: 2,\n                        content: '<i class=\"fa fa-lock\"></i> Admin'\n                    }\n                }\n            }\n        ];\n    }\n})();\n","(function () {\n    'use strict';\n\n    var core = angular.module('app.core');\n\n    core.config(toastrConfig);\n\n    toastrConfig.$inject = ['toastr'];\n    /* @ngInject */\n    function toastrConfig(toastr) {\n        toastr.options.timeOut = 4000;\n        toastr.options.positionClass = 'toast-bottom-right';\n    }\n\n    var config = {\n        appErrorPrefix: '[hottowel Error] ',\n        appTitle: 'hottowel'\n    };\n\n    core.value('config', config);\n\n    core.config(configure);\n\n    configure.$inject = ['$logProvider', 'routerHelperProvider', 'exceptionHandlerProvider'];\n    /* @ngInject */\n    function configure($logProvider, routerHelperProvider, exceptionHandlerProvider) {\n        if ($logProvider.debugEnabled) {\n            $logProvider.debugEnabled(true);\n        }\n        exceptionHandlerProvider.configure(config.appErrorPrefix);\n        routerHelperProvider.configure({docTitle: config.appTitle + ': '});\n    }\n\n})();\n","/* global toastr:false, moment:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('app.core')\n        .constant('toastr', toastr)\n        .constant('moment', moment);\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.core')\n        .run(appRun);\n\n    /* @ngInject */\n    function appRun(routerHelper) {\n        var otherwise = '/404';\n        routerHelper.configureStates(getStates(), otherwise);\n    }\n\n    function getStates() {\n        return [\n            {\n                state: '404',\n                config: {\n                    url: '/404',\n                    templateUrl: 'app/core/404.html',\n                    title: '404'\n                }\n            }\n        ];\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('dataservice', dataservice);\n\n    dataservice.$inject = ['$http', '$q', 'exception', 'logger'];\n    /* @ngInject */\n    function dataservice($http, $q, exception, logger) {\n        var service = {\n            getPeople: getPeople,\n            getMessageCount: getMessageCount\n        };\n\n        return service;\n\n        function getMessageCount() { return $q.when(72); }\n\n        function getPeople() {\n            return $http.get('/api/people.json')\n                .then(success)\n                .catch(fail);\n\n            function success(response) {\n                return response.data;\n            }\n\n            function fail(e) {\n                return exception.catcher('XHR Failed for getPeople')(e);\n            }\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.dashboard')\n        .controller('DashboardController', DashboardController);\n\n    DashboardController.$inject = ['$q', 'dataservice', 'logger'];\n    /* @ngInject */\n    function DashboardController($q, dataservice, logger) {\n        var vm = this;\n        vm.news = {\n            title: 'hottowel',\n            description: 'Hot Towel Angular is a SPA template for Angular developers.'\n        };\n        vm.messageCount = 0;\n        vm.people = [];\n        vm.title = 'Dashboard';\n\n        activate();\n\n        function activate() {\n            var promises = [getMessageCount(), getPeople()];\n            return $q.all(promises).then(function() {\n                logger.info('Activated Dashboard View');\n            });\n        }\n\n        function getMessageCount() {\n            return dataservice.getMessageCount().then(function (data) {\n                vm.messageCount = data;\n                return vm.messageCount;\n            });\n        }\n\n        function getPeople() {\n            return dataservice.getPeople().then(function (data) {\n                vm.people = data;\n                return vm.people;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.dashboard')\n        .run(appRun);\n\n    appRun.$inject = ['routerHelper'];\n    /* @ngInject */\n    function appRun(routerHelper) {\n        routerHelper.configureStates(getStates());\n    }\n\n    function getStates() {\n        return [\n            {\n                state: 'dashboard',\n                config: {\n                    url: '/',\n                    templateUrl: 'app/dashboard/dashboard.html',\n                    controller: 'DashboardController',\n                    controllerAs: 'vm',\n                    title: 'dashboard',\n                    settings: {\n                        nav: 1,\n                        content: '<i class=\"fa fa-dashboard\"></i> Dashboard'\n                    }\n                }\n            }\n        ];\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.layout')\n        .directive('htSidebar', htSidebar);\n\n    /* @ngInject */\n    function htSidebar () {\n        // Opens and closes the sidebar menu.\n        // Usage:\n        //  <div ht-sidebar\">\n        //  <div ht-sidebar whenDoneAnimating=\"vm.sidebarReady()\">\n        // Creates:\n        //  <div ht-sidebar class=\"sidebar\">\n        var directive = {\n            link: link,\n            restrict: 'EA',\n            scope: {\n                whenDoneAnimating: '&?'\n            }\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\n            var $sidebarInner = element.find('.sidebar-inner');\n            var $dropdownElement = element.find('.sidebar-dropdown a');\n            element.addClass('sidebar');\n            $dropdownElement.click(dropdown);\n\n            function dropdown(e) {\n                var dropClass = 'dropy';\n                e.preventDefault();\n                if (!$dropdownElement.hasClass(dropClass)) {\n                    $sidebarInner.slideDown(350, scope.whenDoneAnimating);\n                    $dropdownElement.addClass(dropClass);\n                } else if ($dropdownElement.hasClass(dropClass)) {\n                    $dropdownElement.removeClass(dropClass);\n                    $sidebarInner.slideUp(350, scope.whenDoneAnimating);\n                }\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.layout')\n        .directive('htTopNav', htTopNav);\n\n    /* @ngInject */\n    function htTopNav () {\n        var directive = {\n            bindToController: true,\n            controller: TopNavController,\n            controllerAs: 'vm',\n            restrict: 'EA',\n            scope: {\n                'navline': '='\n            },\n            templateUrl: 'app/layout/ht-top-nav.html'\n        };\n\n        /* @ngInject */\n        function TopNavController() {\n            var vm = this;\n        }\n\n        return directive;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.layout')\n        .controller('ShellController', ShellController);\n\n    ShellController.$inject = ['$rootScope', '$timeout', 'config', 'logger'];\n    /* @ngInject */\n    function ShellController($rootScope, $timeout, config, logger) {\n        var vm = this;\n        vm.busyMessage = 'Please wait ...';\n        vm.isBusy = true;\n        $rootScope.showSplash = true;\n        vm.navline = {\n            title: config.appTitle,\n            text: 'Created by John Papa',\n            link: 'http://twitter.com/john_papa'\n        };\n\n        activate();\n\n        function activate() {\n            logger.success(config.appTitle + ' loaded!', null);\n            hideSplash();\n        }\n\n        function hideSplash() {\n            //Force a 1 second delay so we can see the splash.\n            $timeout(function() {\n                $rootScope.showSplash = false;\n            }, 1000);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.layout')\n        .controller('SidebarController', SidebarController);\n\n    SidebarController.$inject = ['$state', 'routerHelper'];\n    /* @ngInject */\n    function SidebarController($state, routerHelper) {\n        var vm = this;\n        var states = routerHelper.getStates();\n        vm.isCurrent = isCurrent;\n\n        activate();\n\n        function activate() { getNavRoutes(); }\n\n        function getNavRoutes() {\n            vm.navRoutes = states.filter(function(r) {\n                return r.settings && r.settings.nav;\n            }).sort(function(r1, r2) {\n                return r1.settings.nav - r2.settings.nav;\n            });\n        }\n\n        function isCurrent(route) {\n            if (!route.title || !$state.current || !$state.current.title) {\n                return '';\n            }\n            var menuName = route.title;\n            return $state.current.title.substr(0, menuName.length) === menuName ? 'current' : '';\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.widgets')\n        .directive('htImgPerson', htImgPerson);\n\n    htImgPerson.$inject = ['config'];\n    /* @ngInject */\n    function htImgPerson (config) {\n        //Usage:\n        //<img ht-img-person=\"{{person.imageSource}}\"/>\n        var basePath = config.imageBasePath;\n        var unknownImage = config.unknownPersonImageSource;\n        var directive = {\n            link: link,\n            restrict: 'A'\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\n            attrs.$observe('htImgPerson', function (value) {\n                value = basePath + (value || unknownImage);\n                attrs.$set('src', value);\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.widgets')\n        .directive('htWidgetHeader', htWidgetHeader);\n\n    /* @ngInject */\n    function htWidgetHeader() {\n        //Usage:\n        //<div ht-widget-header title=\"vm.map.title\"></div>\n        // Creates:\n        // <div ht-widget-header=\"\"\n        //      title=\"Movie\"\n        //      allow-collapse=\"true\" </div>\n        var directive = {\n            scope: {\n                'title': '@',\n                'subtitle': '@',\n                'rightText': '@',\n                'allowCollapse': '@'\n            },\n            templateUrl: 'app/widgets/widget-header.html',\n            restrict: 'EA'\n        };\n        return directive;\n    }\n})();\n","// Include in index.html so that app level exceptions are handled.\n// Exclude from testRunner.html which should run exactly what it wants to run\n(function() {\n    'use strict';\n\n    angular\n        .module('blocks.exception')\n        .provider('exceptionHandler', exceptionHandlerProvider)\n        .config(config);\n\n    /**\n     * Must configure the exception handling\n     */\n    function exceptionHandlerProvider() {\n        /* jshint validthis:true */\n        this.config = {\n            appErrorPrefix: undefined\n        };\n\n        this.configure = function (appErrorPrefix) {\n            this.config.appErrorPrefix = appErrorPrefix;\n        };\n\n        this.$get = function() {\n            return {config: this.config};\n        };\n    }\n\n    config.$inject = ['$provide'];\n\n    /**\n     * Configure by setting an optional string value for appErrorPrefix.\n     * Accessible via config.appErrorPrefix (via config value).\n     * @param  {Object} $provide\n     */\n    /* @ngInject */\n    function config($provide) {\n        $provide.decorator('$exceptionHandler', extendExceptionHandler);\n    }\n\n    extendExceptionHandler.$inject = ['$delegate', 'exceptionHandler', 'logger'];\n\n    /**\n     * Extend the $exceptionHandler service to also display a toast.\n     * @param  {Object} $delegate\n     * @param  {Object} exceptionHandler\n     * @param  {Object} logger\n     * @return {Function} the decorated $exceptionHandler service\n     */\n    function extendExceptionHandler($delegate, exceptionHandler, logger) {\n        return function(exception, cause) {\n            var appErrorPrefix = exceptionHandler.config.appErrorPrefix || '';\n            var errorData = {exception: exception, cause: cause};\n            exception.message = appErrorPrefix + exception.message;\n            $delegate(exception, cause);\n            /**\n             * Could add the error to a service's collection,\n             * add errors to $rootScope, log errors to remote web server,\n             * or log locally. Or throw hard. It is entirely up to you.\n             * throw exception;\n             *\n             * @example\n             *     throw { message: 'error message we added' };\n             */\n            logger.error(exception.message, errorData);\n        };\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('blocks.exception')\n        .factory('exception', exception);\n\n    /* @ngInject */\n    function exception($q, logger) {\n        var service = {\n            catcher: catcher\n        };\n        return service;\n\n        function catcher(message) {\n            return function(e) {\n                var thrownDescription;\n                var newMessage;\n                if (e.data && e.data.description) {\n                    thrownDescription = '\\n' + e.data.description;\n                    newMessage = message + thrownDescription;\n                }\n                e.data.description = newMessage;\n                logger.error(newMessage);\n                return $q.reject(e);\n            };\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('blocks.logger')\n        .factory('logger', logger);\n\n    logger.$inject = ['$log', 'toastr'];\n\n    /* @ngInject */\n    function logger($log, toastr) {\n        var service = {\n            showToasts: true,\n\n            error   : error,\n            info    : info,\n            success : success,\n            warning : warning,\n\n            // straight to console; bypass toastr\n            log     : $log.log\n        };\n\n        return service;\n        /////////////////////\n\n        function error(message, data, title) {\n            toastr.error(message, title);\n            $log.error('Error: ' + message, data);\n        }\n\n        function info(message, data, title) {\n            toastr.info(message, title);\n            $log.info('Info: ' + message, data);\n        }\n\n        function success(message, data, title) {\n            toastr.success(message, title);\n            $log.info('Success: ' + message, data);\n        }\n\n        function warning(message, data, title) {\n            toastr.warning(message, title);\n            $log.warn('Warning: ' + message, data);\n        }\n    }\n}());\n","/* Help configure the state-base ui.router */\n(function() {\n    'use strict';\n\n    angular\n        .module('blocks.router')\n        .provider('routerHelper', routerHelperProvider);\n\n    routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\n    /* @ngInject */\n    function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\n        /* jshint validthis:true */\n        var config = {\n            docTitle: undefined,\n            resolveAlways: {}\n        };\n\n        $locationProvider.html5Mode(true);\n\n        this.configure = function(cfg) {\n            angular.extend(config, cfg);\n        };\n\n        this.$get = RouterHelper;\n        RouterHelper.$inject = ['$location', '$rootScope', '$state', 'logger'];\n        /* @ngInject */\n        function RouterHelper($location, $rootScope, $state, logger) {\n            var handlingStateChangeError = false;\n            var hasOtherwise = false;\n            var stateCounts = {\n                errors: 0,\n                changes: 0\n            };\n\n            var service = {\n                configureStates: configureStates,\n                getStates: getStates,\n                stateCounts: stateCounts\n            };\n\n            init();\n\n            return service;\n\n            ///////////////\n\n            function configureStates(states, otherwisePath) {\n                states.forEach(function(state) {\n                    state.config.resolve =\n                        angular.extend(state.config.resolve || {}, config.resolveAlways);\n                    $stateProvider.state(state.state, state.config);\n                });\n                if (otherwisePath && !hasOtherwise) {\n                    hasOtherwise = true;\n                    $urlRouterProvider.otherwise(otherwisePath);\n                }\n            }\n\n            function handleRoutingErrors() {\n                // Route cancellation:\n                // On routing error, go to the dashboard.\n                // Provide an exit clause if it tries to do it twice.\n                $rootScope.$on('$stateChangeError',\n                    function(event, toState, toParams, fromState, fromParams, error) {\n                        if (handlingStateChangeError) {\n                            return;\n                        }\n                        stateCounts.errors++;\n                        handlingStateChangeError = true;\n                        var destination = (toState &&\n                            (toState.title || toState.name || toState.loadedTemplateUrl)) ||\n                            'unknown target';\n                        var msg = 'Error routing to ' + destination + '. ' +\n                            (error.data || '') + '. <br/>' + (error.statusText || '') +\n                            ': ' + (error.status || '');\n                        logger.warning(msg, [toState]);\n                        $location.path('/');\n                    }\n                );\n            }\n\n            function init() {\n                handleRoutingErrors();\n                updateDocTitle();\n            }\n\n            function getStates() { return $state.get(); }\n\n            function updateDocTitle() {\n                $rootScope.$on('$stateChangeSuccess',\n                    function(event, toState, toParams, fromState, fromParams) {\n                        stateCounts.changes++;\n                        handlingStateChangeError = false;\n                        var title = config.docTitle + ' ' + (toState.title || '');\n                        $rootScope.title = title; // data bind to <title>\n                    }\n                );\n            }\n        }\n    }\n})();\n"],"sourceRoot":"/source/"}